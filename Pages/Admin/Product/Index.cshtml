@page
@model WebRazor.Pages.Admin.Product.IndexModel

@{
    ViewData["Title"] = "Index";
}
@{
    var pagingmodel = new WebRazor.Helpers.PagingModel()
            {
                currentPage = Model.currentPage,
                countPages = Model.countPages,
                generateUrl = (int? currentPage) => Url.Page("/Admin/Product/Index", new { currentPage = currentPage })
            };
}
<div class="path-admin">PRODUCTS LIST</b></div>
<div class="content-main">
    <div id="content-main-dashboard">
        <div id="product-title-header">
            <div id="product-title-1" style="width: 25%;">
                <b>Filter by Catetory:</b>
                <form method="get" asp-page="./Index">
                    <select >
                        <option>--- Select ---</option>
                    </select>
                    <input type="submit" value="Filter">
                </form>
            </div>
            <div id="product-title-2" style="width: 55%;">
                <form method="get" asp-page="./Index">
                    <input type="text" name="txtSearch" placeholder="Enter product name to search" />
                    <input type="submit" value="Search" />
                </form>
            </div>
            <div id="product-title-3" style="width: 20%;">
                <a href="~/Admin/Product/Create">Create a new Product</a>
                <form action="">
                    <label for="upload-file">Import .xls or .xlsx file</label>
                    <input type="file" name="file" id="upload-file" />
                </form>
            </div>
        </div>
        <div id="order-table-admin">
            <table id="orders">
                <tr>
                    <th>ProductID</th>
                    <th>ProductName</th>
                    <th>UnitPrice</th>
                    <th>Unit</th>
                    <th>UnitsInStock</th>
                    <th>Category</th>
                    <th>Discontinued</th>
                    <th></th>
                </tr>
                @foreach (var item in Model.Product)
                {
                    <tr>
                        <td>
                            <a href="order-detail.html?id=@item.ProductId">@Html.DisplayFor(modelItem => item.ProductId)</a>
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ProductName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.UnitPrice)
                        </td>
                        <td>@Html.DisplayFor(modelItem => item.QuantityPerUnit)</td>
                        <td>
                            @Html.DisplayFor(modelItem => item.UnitsInStock)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Category.CategoryName)
                        </td>
                        <td>
                            @if(@item.Discontinued == false){
                                <p>False</p>
                            }else{
                                <p>True</p>
                            }
                        </td>

                        <td>
                            <a asp-page="./Edit" asp-route-id="@item.ProductId">Edit</a> |
                            <a asp-page="./Delete" asp-route-id="@item.ProductId">Delete</a>
                        </td>
                    </tr>
                }
            </table>
        </div>
        <div id="paging">
            <div class="pagination">
                <partial name="_Paging" model="@pagingmodel" />
            </div>
        </div>
    </div>
</div>
